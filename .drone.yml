kind: pipeline
type: docker
name: tests
clone:
    depth: 10
volumes:
  - name: cache
    host:
      path: /drone-cache
services:
  - name: geth
    image: matterlabs/geth:latest
  - name: postgres
    image: postgres:10.4
trigger:
  event:
  - pull_request
steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    restore: true
    mount:
      - ./target/cargo
      - ./keys
- name: init
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - ci-prepare-env.sh
  - zksync env ci
  - zksync yarn
  - zksync db-wait
  - zksync db-setup
  depends_on:
  - restore-cache
- name: run-genesis
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync genesis
  depends_on:
  - init
- name: rust-tests-and-checks
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync circuit-tests
  - zksync prover-tests
  - zksync db-test
  - f cargo test --release
  - cargo fmt -- --check
  - f cargo clippy --tests --benches -- -D warnings
  depends_on:
  - run-genesis
- name: build-contracts
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync build-contracts
  depends_on:
  - init
- name: redeploy-and-integration-testkit
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync redeploy
  - zksync integration-testkit
  depends_on:
  - run-genesis
  - build-contracts
- name: contract-test
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync test-contracts
  depends_on:
  - build-contracts
- name: rebuild-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    rebuild: true
    mount:
      - ./target/cargo
      - ./keys
  depends_on:
     - redeploy-and-integration-testkit
     - rust-tests-and-checks
---
kind: pipeline
type: docker
name: integration-simple
clone:
    depth: 10
volumes:
  - name: cache
    host:
      path: /drone-cache
services:
  - name: geth
    image: matterlabs/geth:latest
  - name: postgres
    image: postgres:10.4
trigger:
  event:
  - pull_request
steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    restore: true
    mount:
      - ./target/cargo
      - ./keys
- name: preparations-for-integration-simple
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - ci-prepare-env.sh
  - zksync env ci
  - zksync yarn
  - zksync db-wait
  - zksync db-setup
  - ssed -E "s/(.*constant DUMMY_VERIFIER)(.*)\;/\1 = true\;/" -i $ZKSYNC_HOME/contracts/contracts/Verifier.sol
  - zksync build-contracts
  - zksync db-reset
  - zksync genesis
  - zksync redeploy
  - f cargo build --release --bin server
  - f cargo build --bin dummy_prover
  depends_on:
  - restore-cache
- name: start-server-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync server
  depends_on:
  - preparations-for-integration-simple
- name: start-prover-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync dummy-prover
  depends_on:
  - preparations-for-integration-simple
- name: integration-simple
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync integration-simple
  depends_on:
  - start-server-detached
  - start-prover-detached
---
# This pipeline publishes images and updates stage
kind: pipeline
type: docker
name: update-stage
clone:
    depth: 10

volumes:
  - name: cache
    host:
      path: /drone-cache
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: cargo-git-musl
    host:
      path: /tmp/cargo-git-musl
  - name: cargo-registry-musl
    host:
      path: /tmp/cargo-registry-musl

trigger:
  target:
  - stage
  event:
  - promote

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    restore: true
    mount:
      - ./target/cargo
      - ./keys

- name: init
  image: matterlabs/ci
  environment:
    DB_URL:
      from_secret: stage_db_url
    WEB3_URL:
      from_secret: stage_web3_url
    CONTRACT_ADDR:
      from_secret: stage_contract_addr
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - stage-prepare-env.sh $DB_URL $WEB3_URL $CONTRACT_ADDR
  - zksync env stage
  - zksync yarn
  - zksync gen-keys-if-not-present
  - zksync build-contracts
  depends_on:
  - restore-cache

- name: client-and-explorer-build
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - export CARGO_HOME=$ZKSYNC_HOME/target/cargo
  - zksync env stage
  # too much logs and pipeline is failing
  - zksync yarn
  - zksync dist-client > /dev/null
  - zksync dist-explorer > /dev/null
  depends_on:
  - init

- name: nginx-image-publish
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:stage-${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:stage-${DRONE_COMMIT_SHA:0:8}
  environment:
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
    DOCKERFILE: ./docker/nginx/Dockerfile
    REPO: matterlabs/nginx
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - client-and-explorer-build

- name: build-rust
  image: ekidd/rust-musl-builder
  volumes:
  - name: cargo-git-musl
    path: /home/rust/.cargo/git
  - name: cargo-registry-musl
    path: /home/rust/.cargo/registry
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync env stage
  - sudo chown -R rust:rust /home/rust/.cargo/git /home/rust/.cargo/registry
  - sudo chown -R rust:rust ./target
  - f cargo build --release
  depends_on:
  - init

- name: server-image-publish
  image: docker
  environment:
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
    DOCKERFILE: ./docker/server/Dockerfile
    REPO: matterlabs/server
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - build-rust

- name: prover-image-publish
  image: docker
  environment:
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
    DOCKERFILE: ./docker/prover/Dockerfile
    REPO: matterlabs/prover
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - build-rust

- name: stage-deploy
  image: matterlabs/ci
  environment:
    KUBE_CA_DATA:
      from_secret: stage_k8s_ca
    KUBE_SERVER:
      from_secret: stage_k8s_server
    KUBE_USER:
      from_secret: stage_k8s_user
    KUBE_TOKEN:
      from_secret: stage_k8s_token
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - envsubst < `pwd`/etc/kube/kubeconfig-template.yaml > `pwd`/kubeconfig.yaml
  - python3 $ZKSYNC_HOME/bin/replace-env-variable.py $ZKSYNC_HOME/etc/env/stage.env KUBECONFIG=`pwd`/kubeconfig.yaml
  - zksync apply-kubeconfig
  - zksync restart
  depends_on:
  - nginx-image-publish
  - server-image-publish
  - prover-image-publish
