kind: pipeline
type: docker
name: loadtest-nightly

platform:
  os: linux
  arch: amd64

clone:
  depth: 10

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  settings:
    mount:
    - ./target/rust-ci-cache
    - ./keys/setup
    restore: true
  volumes:
  - name: cache
    path: /cache

- name: prepare-for-loadtest
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - ci-prepare-env.sh
  - zksync env ci
  - zksync yarn
  - zksync plonk-setup check || zksync plonk-setup download
  - zksync verify-keys unpack
  - zksync deploy-dev-erc20
  - zksync build-contracts
  - zksync genesis
  - zksync redeploy
  - f cargo build --release
  depends_on:
  - restore-cache

- name: start-server-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync server
  depends_on:
  - prepare-for-loadtest

- name: start-prover-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync prover 10
  depends_on:
  - start-server-detached

- name: loadtest
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - sleep 30
  - zksync loadtest execution `pwd`/etc/ci/loadtest-nightly.json
  depends_on:
  - start-server-detached
  - start-prover-detached

services:
- name: geth
  image: matterlabs/geth:latest

- name: postgres
  image: postgres:10.4

volumes:
- name: cache
  host:
    path: /drone-cache

trigger:
  event:
  - cron
---
kind: pipeline
type: docker
name: tests

platform:
  os: linux
  arch: amd64

clone:
  depth: 10

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  settings:
    mount:
    - ./target/rust-ci-cache
    - ./keys/setup
    restore: true
  volumes:
  - name: cache
    path: /cache

- name: init
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - ci-prepare-env.sh
  - zksync dummy-prover ensure-disabled
  - zksync env ci
  - zksync yarn
  - zksync plonk-setup check || zksync plonk-setup download
  - zksync verify-keys unpack
  - zksync deploy-dev-erc20
  - zksync dummy-prover ensure-disabled
  depends_on:
  - restore-cache

- name: rust-checks
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - cargo fmt -- --check
  - f cargo clippy --tests --benches -- -D warnings
  depends_on:
  - init

- name: rust-build
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - f cargo build --release --all-targets
  - f cargo test --release --all-targets --no-run
  - f cargo test --release -p prover --no-run
  - f cargo test --release -p circuit --no-run
  - pushd core/storage
  - f cargo test --release -p storage --features "db_test" --no-run
  - popd
  - sccache --show-stats
  depends_on:
  - init

- name: run-genesis
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync genesis
  depends_on:
  - rust-build

- name: circuit-rust-tests
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync circuit-tests
  depends_on:
  - run-genesis

- name: non-circuit-rust-tests
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync prover-tests
  - zksync db-test
  - f cargo test --release
  depends_on:
  - run-genesis

- name: build-contracts
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync build-contracts
  depends_on:
  - init

- name: redeploy-and-integration-testkit
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync redeploy
  - zksync integration-testkit
  depends_on:
  - run-genesis
  - build-contracts

- name: contract-test
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync test-contracts
  depends_on:
  - build-contracts

- name: rebuild-cache
  image: drillster/drone-volume-cache
  settings:
    mount:
    - ./target/rust-ci-cache
    - ./keys/setup
    rebuild: true
  volumes:
  - name: cache
    path: /cache
  depends_on:
  - rust-build

services:
- name: geth
  image: matterlabs/geth:latest
  settings:
    config: standard

- name: geth-fast
  image: matterlabs/geth:latest
  settings:
    config: fast

- name: postgres
  image: postgres:10.4

volumes:
- name: cache
  host:
    path: /drone-cache

trigger:
  event:
  - pull_request

---
kind: pipeline
type: docker
name: integration-simple-fullexit

platform:
  os: linux
  arch: amd64

clone:
  depth: 10

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  settings:
    mount:
    - ./target/rust-ci-cache
    - ./keys/setup
    restore: true
  volumes:
  - name: cache
    path: /cache

- name: preparations-for-integration-simple
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - ci-prepare-env.sh
  - zksync env ci
  - zksync yarn
  - zksync db-wait
  - zksync db-setup
  - zksync verify-keys unpack
  - zksync genesis
  - zksync dummy-prover enable
  - f cargo build --release --bin server
  - f cargo build --release --bin dummy_prover
  depends_on:
  - restore-cache

- name: start-server-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync server
  depends_on:
  - preparations-for-integration-simple

- name: start-prover-detached
  image: matterlabs/ci
  detach: true
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync dummy-prover
  depends_on:
  - preparations-for-integration-simple

- name: integration-simple
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - sleep 15
  - zksync integration-simple
  - zksync integration-full-exit
  - zksync api-type-validate
  depends_on:
  - start-server-detached
  - start-prover-detached

services:
- name: geth
  image: matterlabs/geth:latest
  settings:
    config: standard

- name: postgres
  image: postgres:10.4

volumes:
- name: cache
  host:
    path: /drone-cache

trigger:
  event:
  - pull_request

---
kind: pipeline
type: docker
name: update-stage

platform:
  os: linux
  arch: amd64

clone:
  depth: 10

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  settings:
    mount:
    - ./target/rust-ci-cache
    - ./keys/setup
    restore: true
  volumes:
  - name: cache
    path: /cache

- name: init
  image: matterlabs/ci
  commands:
  - git checkout ${DRONE_COMMIT_SHA}
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - echo -n $STAGE_ENV_BASE64| base64 --decode > $ZKSYNC_HOME/etc/env/stage.env
  - zksync env stage
  - zksync yarn
  - zksync plonk-setup check || zksync plonk-setup download
  - zksync verify-keys unpack
  - zksync build-contracts
  environment:
    STAGE_ENV_BASE64:
      from_secret: stage_env_base64
  depends_on:
  - restore-cache

- name: client-and-explorer-build
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync env stage
  - zksync yarn
  - zksync dist-client > /dev/null
  - zksync dist-explorer > /dev/null
  depends_on:
  - init

- name: nginx-image-publish
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  environment:
    DOCKERFILE: ./docker/nginx/Dockerfile
    PASSWORD:
      from_secret: docker_password
    REPO: matterlabs/nginx
    USERNAME:
      from_secret: docker_username
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - client-and-explorer-build

- name: build-rust
  image: ekidd/rust-musl-builder
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - zksync env stage
  - sudo chown -R rust:rust /home/rust/.cargo/git /home/rust/.cargo/registry
  - sudo chown -R rust:rust ./target
  - f cargo build --release
  volumes:
  - name: cargo-git-musl
    path: /home/rust/.cargo/git
  - name: cargo-registry-musl
    path: /home/rust/.cargo/registry
  depends_on:
  - init

- name: server-supervisor-image-publish
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  environment:
    DOCKERFILE: ./docker/server_supervisor/Dockerfile
    PASSWORD:
      from_secret: docker_password
    REPO: matterlabs/server_supervisor
    USERNAME:
      from_secret: docker_username
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - build-rust

- name: server-image-publish
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  environment:
    DOCKERFILE: ./docker/server/Dockerfile
    PASSWORD:
      from_secret: docker_password
    REPO: matterlabs/server
    USERNAME:
      from_secret: docker_username
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - build-rust

- name: prover-image-publish
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker build -t $REPO:${DRONE_COMMIT_SHA:0:8} -f $DOCKERFILE .
  - docker push $REPO:${DRONE_COMMIT_SHA:0:8}
  environment:
    DOCKERFILE: ./docker/prover/Dockerfile
    PASSWORD:
      from_secret: docker_password
    REPO: matterlabs/prover
    USERNAME:
      from_secret: docker_username
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
  depends_on:
  - build-rust

- name: stage-deploy
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - echo -n $KUBECONFIG_BASE64 | base64 --decode > `pwd`/kubeconfig.yaml
  - python3 $ZKSYNC_HOME/bin/replace-env-variable.py $ZKSYNC_HOME/etc/env/stage.env KUBECONFIG=`pwd`/kubeconfig.yaml
  - zksync db-migrate
  - zksync apply-kubeconfig
  - zksync restart
  environment:
    KUBECONFIG_BASE64:
      from_secret: stage_kubeconfig_base64
  depends_on:
  - nginx-image-publish
  - server-image-publish
  - prover-image-publish

volumes:
- name: cache
  host:
    path: /drone-cache
- name: docker-sock
  host:
    path: /var/run/docker.sock
- name: cargo-git-musl
  host:
    path: /tmp/cargo-git-musl
- name: cargo-registry-musl
  host:
    path: /tmp/cargo-registry-musl

trigger:
  event:
  - promote
  target:
  - stage

---
kind: pipeline
type: docker
name: update-testnet

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
- name: check out to commit
  image: matterlabs/ci
  commands:
  - git checkout ${DRONE_COMMIT_SHA}

- name: check-images-exist
  image: docker
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - docker pull matterlabs/server:${DRONE_COMMIT_SHA:0:8}
  - docker pull matterlabs/prover:${DRONE_COMMIT_SHA:0:8}
  - docker pull matterlabs/nginx:${DRONE_COMMIT_SHA:0:8}
  environment:
    ENV_BASE64:
      from_secret: ${ZKSYNC_ENV}_env_base64
    PASSWORD:
      from_secret: docker_password
    USERNAME:
      from_secret: docker_username
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock

- name: testnet-deploy
  image: matterlabs/ci
  commands:
  - export ZKSYNC_HOME=`pwd`
  - export PATH=$ZKSYNC_HOME/bin:$PATH
  - echo -n $ENV_BASE64 | base64 --decode > $ZKSYNC_HOME/etc/env/${ZKSYNC_ENV}.env
  - zksync env ${ZKSYNC_ENV}
  - echo -n $KUBECONFIG_BASE64 | base64 --decode > `pwd`/kubeconfig.yaml
  - python3 $ZKSYNC_HOME/bin/replace-env-variable.py $ZKSYNC_HOME/etc/env/${ZKSYNC_ENV}.env KUBECONFIG=`pwd`/kubeconfig.yaml
  - zksync db-migrate
  - zksync apply-kubeconfig
  - zksync restart
  environment:
    ENV_BASE64:
      from_secret: ${ZKSYNC_ENV}_env_base64
    KUBECONFIG_BASE64:
      from_secret: ${ZKSYNC_ENV}_kubeconfig_base64

volumes:
- name: docker-sock
  host:
    path: /var/run/docker.sock

trigger:
  event:
  - promote
  target:
  - testnet
  - ropsten

...
