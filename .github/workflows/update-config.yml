name: Update Config
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment where to update the config'
        required: true
      ref:
        description: 'Branch or tag to fetch configs from'
        required: true

defaults:
  run:
    shell: bash -leo pipefail {0}

# Disable simultaneous deployments into a single environment
concurrency: update-config-${{ github.event.inputs.environment }}

jobs:
  pre:
    runs-on: [k8s, stage]
    steps:
      - uses: actions/checkout@v2
      -
        name: Map runtime environment data
        id: envMap
        uses: kanga333/variable-mapper@v0.2.2
        with:
          key: ${{ github.event.inputs.environment }}
          export_to: output
          mode: overwrite
          map: |
            {
              ".*": {
                "hfEnv": "${{ github.event.inputs.environment }}",
                "runner": "stage",
                "namespace": "${{ github.event.inputs.environment }}"
              },
              "^rinkeby$": { "runner": "testnet" },
              "^ropsten$": { "runner": "testnet" },
              "^mainnet$": { "runner": "mainnet", "hfEnv": "prod", "namespace": "zksync" }
            }

    outputs:
      environment: ${{ github.event.inputs.environment }}
      hfEnv: ${{ steps.envMap.outputs.hfEnv }}
      namespace: ${{ steps.envMap.outputs.namespace }}
      runner: ${{ steps.envMap.outputs.runner }}
      configRef: ${{ github.event.inputs.ref }}

  updateConfig:
    name: Update Config
    needs: [pre]
    runs-on: [k8s, deployer, "${{ needs.pre.outputs.runner }}"]
    container:
      image: dysnix/kubectl:v1.20-gcloud
      volumes:
        - /var/run/secrets/tokens:/var/run/secrets/tokens
    env:
      ENVFILE: ./compiled_envs/${{ needs.pre.outputs.environment }}.env
    steps:
      -
        id: kubeConf
        run: |
          kube_token=$(cat /var/run/secrets/tokens/github-actions-deployer)
          echo "::add-mask::$kube_token"
          echo "::set-output name=token::$kube_token"
      -
        name: Generate ~/.kube/config
        run: |
          kubectl config set-credentials user --token=${{ steps.kubeConf.outputs.token }}
          kubectl config set-cluster default --server=https://kubernetes.default --insecure-skip-tls-verify=true
          kubectl config set-context default --user=user --cluster=default
          kubectl config use-context default
      -
        name: Clone configs
        uses: actions/checkout@v2
        with:
          repository: matter-labs/configs
          path: configs
          ref: ${{ needs.pre.outputs.configRef }}
          token: ${{ secrets.GH_TOKEN }}
      -
        name: Update Server Config
        working-directory: configs
        run: |
          sudo apk --no-cache add yarn
          ./bin/config
          ./bin/config compile ${{ needs.pre.outputs.environment }}
          kubectl delete configmap -n ${{ needs.pre.outputs.namespace }} server-env-custom || /bin/true
          kubectl create configmap -n ${{ needs.pre.outputs.namespace }} server-env-custom --from-env-file=${{ env.ENVFILE }}
          # kubectl delete pod -n ${{ needs.pre.outputs.namespace }} -l app.kubernetes.io/instance=server
