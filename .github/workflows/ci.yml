name: CI

on:
  pull_request:
  push:
    branches:
    - staging
    - trying

jobs:
  ci-all:
    # We currently have two self-hosted runners, one of which is marked "DEV-CI" and other one is marder "MAIN".
    # "MAIN" is the current CI runner, "DEV-CI" is currently used to experiment with CI optimizing.
    runs-on: [self-hosted, TEST]

    steps:

      - uses: actions/checkout@v2
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml up -d geth postgres zk
      - name: find_cache
        run: docker-compose -f docker-compose-runner.yml exec -T zk sh infrastructure/ci-scripts/find_cache.sh
      - name: init
        run: |
          docker-compose -f docker-compose-runner.yml exec -T zk ln -s /usr/src/keys/setup keys/setup
          docker-compose -f docker-compose-runner.yml exec -T zk zk
          docker-compose -f docker-compose-runner.yml exec -T zk zk dummy-prover enable --no-redeploy
          docker-compose -f docker-compose-runner.yml exec -T zk zk init
      - name: liquidity-token
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher
      - name: lints
        run: docker-compose -f docker-compose-runner.yml exec -T zk sh infrastructure/ci-scripts/lints.sh

      - name: generic-init
        run: |
          # Unpack keys to build dev contracts
          docker-compose -f docker-compose-runner.yml exec -T zk zk run verify-keys unpack
          # EIP1271 contract is used in Rust & JS unit tests.
          docker-compose -f docker-compose-runner.yml exec -T zk zk contract build-dev
          docker-compose -f docker-compose-runner.yml exec -T zk zk run deploy-eip1271
      - name: run-services
        run: docker-compose -f docker-compose-runner.yml exec -T zk sh infrastructure/ci-scripts/run_services.sh
      - name: cache
        run: docker-compose -f docker-compose-runner.yml exec -T zk sh infrastructure/ci-scripts/cache.sh
      - name: integration-tests
        run: docker-compose -f docker-compose-runner.yml exec -T zk zk test integration all

      - name: integration-testkit
        run: docker-compose -f docker-compose-runner.yml exec -T zk zk test integration testkit
        env:
          SQLX_OFFLINE: "true"
      - name: contracts-unit-tests
        run: docker-compose -f docker-compose-runner.yml exec -T zk zk test contracts

      - name: js-unit-tests
        run: docker-compose -f docker-compose-runner.yml exec -T zk zk test js

      - name: rust-unit-tests
        run: |
          # Api tests require database setup
          docker-compose -f docker-compose-runner.yml exec -T zk zk db setup
          docker-compose -f docker-compose-runner.yml exec -T zk zk test rust

      - name: zksync-crypto-tests
        run: docker-compose -f docker-compose-runner.yml exec -T zk pushd sdk/zksync-crypto && zk f cargo test --release

      - name: cache
        run: docker-compose -f docker-compose-runner.yml exec -T zk sh infrastructure/ci-scripts/cache.sh
