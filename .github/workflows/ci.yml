name: CI

on:
  pull_request:
  push:
    branches:
    - staging
    - trying

jobs:
  ci-all:
    # We currently have two self-hosted runners, one of which is marked "DEV-CI" and other one is marder "MAIN".
    # "MAIN" is the current CI runner, "DEV-CI" is currently used to experiment with CI optimizing.
    runs-on: [self-hosted, TEST]

    steps:

      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
        
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml up --build -d geth postgres zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk dummy-prover enable --no-redeploy
          ci_run zk init

      # Compile everything at once so it won't have to be recompiled later
      - name: compile
        run: ci_run zk f cargo build --all --bins --examples --tests --release

      - name: liquidity-token
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher

      - name: lints
        run: |
          ci_run zk fmt --check
          ci_run zk lint --check
          ci_run cargo fmt --all -- --check
          ci_run zk f cargo clippy --tests --benches -- -D warnings
          ci_run pushd sdk/zksync-crypto && cargo fmt -- --check
          ci_run pushd sdk/zksync-crypto && cargo clippy --all --tests --benches -- -D warnings

      - name: run-services
        run: ci_run sh infrastructure/ci-scripts/run_services.sh

      - name: integration-server
        run: ci_run zk test i server

      - name: integration-api
        run: ci_run zk test i api

      - name: integration-zcli
        run: ci_run zk test i zcli

      - name: integration-rust-sdk
        run: ci_run zk test i rust-sdk
      
      - name: integration-testkit
        run: ci_run zk test integration testkit

      - name: contracts-unit-tests
        run: ci_run zk test contracts

      - name: js-unit-tests
        run: ci_run zk test js

      - name: rust-unit-tests
        run: ci_run zk test rust
