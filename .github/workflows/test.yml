name: test

on: 
  push:
  pull_request:
    types: [opened]

env:
  ZKSYNC_ENV: loadtest
  hfArgs: -e zksync-loadtest

jobs:
  sqlproxy:
    name: Provision SQLProxy
    runs-on: [k8s, stage, deployer]
    container:
      image: dysnix/kubectl:v1.16-gcloud

    env:
      KUBECONF: ${{ secrets.STAGE_KUBECONF }}

    steps:
      - uses: actions/checkout@v2
      -
        name: Clone helm-infra
        uses: actions/checkout@v2
        with:
          repository: matter-labs/helm-infra
          path: helm-infra
          ref: new-health-check
          token: ${{ secrets.GH_TOKEN }}
      -
        name: Create ~/.kube/config
        run: ./.github/scripts/write-kubeconf.sh
      -
        name: Setup helm and loadtest.env
        run: |
          set -o pipefail
          cp -rf /dysnix/kubectl/.local $HOME/.local

          .github/scripts/zksync-env.sh --kube loadtest > etc/env/loadtest.env
          echo -n "ETH_SENDER_SENDER_OPERATOR_PRIVATE_KEY=" >> etc/env/loadtest.env
          kubectl get secret -n loadtest server-env -o jsonpath='{.data.ETH_SENDER_SENDER_OPERATOR_PRIVATE_KEY}' | base64 -d >> etc/env/loadtest.env
      -
        name: Deploy SQLProxy
        working-directory: helm-infra
        run: |
          UPDATE_REPOS=y helmfile $hfArgs repos
          helmfile $hfArgs -l name=sqlproxy sync

  init:
    name: Cleanup the database, compile and update contracts
    runs-on: [k8s, stage, deployer]
    needs: sqlproxy
    env:
      ZKSYNC_ENV: loadtest
      RUSTUP_HOME: /usr/share/rust/.rustup
      CARGO_HOME: /usr/share/rust/.cargo

    steps:
      -
        name: Preperare env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo $CARGO_HOME/bin >> $GITHUB_PATH
      -
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      -
        name: Update cargo dependencies
        run: |
          cargo install --version=0.5.2 sqlx-cli
          cargo install diesel_cli --no-default-features --features postgres
      -
        name: Setup loadtest database
        run: |
          zk
          zk run yarn
          zk run verify-keys unpack
          zk db setup
          zk server --genesis
          zk contract build
          zk contract deploy
          cd contracts && zk f yarn governance-add-erc20 add-multi-current-network rinkeby
          zk db insert contract

  deploy:
    name: Deploy the apps
    runs-on: [k8s, stage, deployer]
    needs: init
    container:
      image: dysnix/kubectl:v1.16-gcloud

    env:
      KUBECONF: ${{ secrets.STAGE_KUBECONF }}
      DEPLOY_APPS: -l name=server -l name=prover
      IMAGE_TAG: ${{ needs.pre.outputs.shortRev }}
      HFENV: zksync-loadtest

    steps:
      -
        name: Create ~/.kube/config
        run: .github/scripts/write-kubeconf.sh
      -
        name: Update contracts in the ConfigMap
        run: |
          cat deployed_contracts.log
          .github/scripts/zksync-env.sh --update-from deployed_contracts.log
      -
        name: Deploy apps
        working-directory: helm-infra
        run: |
          cp -r /dysnix/kubectl/.local /dysnix/kubectl/.cache ~

          UPDATE_REPOS=y helmfile -e $HFENV repos
          IMAGE_TAG=b2f056a helmfile -e $HFENV $DEPLOY_APPS diff --args "timeout 180s"
          IMAGE_TAG=b2f056a helmfile -e $HFENV $DEPLOY_APPS sync --args "timeout 180s"

  loadtest:
    name: Perform loadtest
    runs-on: [self-hosted, CI-worker]
    needs: deploy
    env:
      WEB3_URL: ${{secrets.CI_LOADTEST_WEB3_URL}}
      MASTER_WALLET_PK: ${{secrets.CI_LOADTEST_MAIN_PRIVKEY}}
      ACCOUNTS_AMOUNT: 20
      OPERATIONS_PER_ACCOUNT: 10
      MAIN_TOKEN: "USDT"
      ZKSYNC_RPC_ADDR: "https://loadtest-api.zksync.dev/jsrpc"
      ETH_NETWORK: "rinkeby"
    steps:
      - uses: actions/checkout@v2
      -
        name: Run loadtest
        run: |
          docker run -e RUST_LOG=info -e WEB3_URL -e MASTER_WALLET_PK -e ACCOUNTS_AMOUNT -e OPERATIONS_PER_ACCOUNT -e MAIN_TOKEN -e ZKSYNC_RPC_ADDR -e ETH_NETWORK -v $(pwd):/usr/zksync-dev -w /usr/zksync-dev  rust:1.53 cargo run --bin loadnext
#  cleanup:
#    name: Cleanup loadtest environment
#    runs-on: [k8s, stage, deployer]
#    needs: loadtest
#    if: always()
#    container:
#      image: dysnix/kubectl:v1.16-gcloud
#    env:
#      KUBECONF: ${{ secrets.STAGE_KUBECONF }}
#
#    steps:
#      -
#        name: Create ~/.kube/config
#        run: .github/scripts/write-kubeconf.sh
#      -
#        name: Scale loadtest to 0 replicas
#        run: |
#          kubectl -n $ZKSYNC_ENV scale --replicas=0 deploy/explorer
#          kubectl -n $ZKSYNC_ENV scale --replicas=0 deploy/server
#          kubectl -n $ZKSYNC_ENV scale --replicas=0 deploy/prover
