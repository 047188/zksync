name: Update Config
on:
  workflow_call:
    inputs:
      environment:
        description: zkSync Environment (mainnet, stage, rinkeby etc)
        type: string
        required: true
      cluster:
        description: Specifies Kubernets cluster
        required: true
        type: string
      ref:
        description: Branch/tag to fetch configs from
        required: true
        type: string
      namespace:
        description: Kubernets namespace of the config
        required: true
        type: string
    secrets:
      github-token:
        description: GitHub token
        required: false

defaults:
  run:
    shell: bash -leo pipefail {0}

# Disable simultaneous deployments into a single environment
concurrency: server-update-config-${{ inputs.environment }}

jobs:
  update:
    name: configMap (server-env-custom)
    runs-on: [self-hosted, deployer, "${{ inputs.cluster }}"]
    container:
      image: dysnix/kubectl:v1.20-gcloud
      volumes:
        - /var/run/secrets/tokens:/var/run/secrets/tokens
    env:
      ENVFILE: ./compiled_envs/${{ inputs.environment }}.env
    steps:
      -
        name: Clone configs
        uses: actions/checkout@v2
        with:
          repository: matter-labs/configs
          path: configs
          ref: ${{ inputs.ref }}
          token: ${{ secrets.github-token }}
      -
        id: kubeConf
        run: |
          kube_token=$(cat /var/run/secrets/tokens/gha-deployer-${{ inputs.cluster }})
          echo "::add-mask::$kube_token"
          echo "::set-output name=token::$kube_token"
      -
        name: Generate ~/.kube/config
        run: |
          kubectl config set-credentials user --token=${{ steps.kubeConf.outputs.token }}
          kubectl config set-cluster default --server=https://kubernetes.default --insecure-skip-tls-verify=true
          kubectl config set-context matterlabs-zksync-${{ inputs.cluster }} --user=user --cluster=default
          kubectl config use-context matterlabs-zksync-${{ inputs.cluster }}

      -
        name: Update Server Config
        working-directory: configs
        run: |
          sudo apk --no-cache add yarn
          ./bin/config
          ./bin/config compile ${{ inputs.environment }}
          kubectl delete configmap -n ${{ inputs.namespace }} server-env-custom || /bin/true
          kubectl create configmap -n ${{ inputs.namespace }} server-env-custom --from-env-file=${{ env.ENVFILE }}
          # kubectl delete pod -n ${{ inputs.namespace }} -l app.kubernetes.io/instance=server
