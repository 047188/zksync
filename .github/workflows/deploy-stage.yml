name: Build and Deploy Stage
on:
  push:
    branches:
      - dev
      - breaking
      - hotfix/*
      - build-runner-gcp
    tags:
      - hotfix-*

# Disable simultaneous deployments into stage
concurrency: deploy-stage

jobs:
  setup:
    name: Setup
    runs-on: [k8s, stage]
    outputs:
      image_tag: ${{ steps.set.outputs.shortRev }}
    steps:
      - uses: actions/checkout@v2
      - id: set
        run: echo "::set-output name=shortRev::$(git rev-parse --short HEAD)"

  build-images:
    name: Build and Push Docker Images
    runs-on: [self-hosted, ci-runner]

    steps:
    - uses: actions/checkout@v2
    - name: setup-env
      run: |
        echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
        echo CI=1 >> $GITHUB_ENV
        echo $(pwd)/bin >> $GITHUB_PATH

    - name: init
      run: |
        curl https://sh.rustup.rs -sSf -o install.sh
        chmod +x install.sh
        ./install.sh -y
        source $HOME/.cargo/env
        apt-get install -y pkg-config
        cargo sqlx --version || cargo install sqlx-cli
        zk
        zk run yarn
        cp etc/tokens/{test,localhost}.json
        zk run verify-keys unpack
        zk up
        zk db basic-setup

    - name: update-images
      run: |
        docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
        zk docker push rust

    - name: docker-down
      if: always()
      run: |
        docker-compose down

  # Reminder: when disabling the deploy stage - comment the whole job out!
  # deploy:
  #   name: Deploy Stage environment
  #   runs-on: [k8s, deployer, stage]
  #   needs: [setup, build-images]
  #   steps:
  #     - name: Deploy
  #       uses: aurelien-baudet/workflow-dispatch@v2
  #       with:
  #         workflow: Deploy
  #         token: ${{ secrets.GH_TOKEN }}
  #         wait-for-completion-timeout: 10m
  #         wait-for-completion-interval: 1m
  #         inputs: |
  #           {
  #             "environment": "stage",
  #             "image_tag": "${{ needs.setup.outputs.image_tag }}",
  #             "config_ref": "master"
  #           }
