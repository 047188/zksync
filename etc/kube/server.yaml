apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api-ingress
spec:
  rules:
  - host: testnet.matter-labs.io
    http:
      paths:
      - path: /
        backend:
          serviceName: ${FRANKLIN_ENV}-server
          servicePort: 3000
      - path: /jsrpc
        backend:
          serviceName: ${FRANKLIN_ENV}-server
          servicePort: 3030
      - path: /jsrpc-ws
        backend:
          serviceName: ${FRANKLIN_ENV}-server
          servicePort: 3031
---
apiVersion: v1
kind: Service
metadata:
  name: ${FRANKLIN_ENV}-nginx
  labels:
    app: ${FRANKLIN_ENV}-nginx
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: ${FRANKLIN_ENV}-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${FRANKLIN_ENV}-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${FRANKLIN_ENV}-nginx
  template:
    metadata:
      labels:
        app: ${FRANKLIN_ENV}-nginx
    spec:
      containers:
        - name: ${FRANKLIN_ENV}-nginx
          image: matterlabs/nginx:${FRANKLIN_ENV}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      nodeSelector:
        doks.digitalocean.com/node-pool: prover
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${FRANKLIN_ENV}-server
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: ${FRANKLIN_ENV}-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${FRANKLIN_ENV}-server
    spec:
      containers:
        - name: server
          image: matterlabs/server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
            - containerPort: 3030
            - containerPort: 3031
          envFrom:
            - secretRef:
                name: ${FRANKLIN_ENV}-secret
          env:
          - name: FRANKLIN_ENV
            value: "${FRANKLIN_ENV}"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      nodeSelector:
        doks.digitalocean.com/node-pool: prover
