FORMAT: 1A

# zkSync API v0.2

# Group Accounts

## api/v0.2/accounts [/accounts/{accountIdOrAddress}/{stateType}]

+ Parameters
    + accountIdOrAddress (required, string, `2319`) ... Account Id or address in the zkSync network
    + stateType (required, "committed" | "finalized", `committed`) ... The type of account state which we want to get

### Get account state [GET]
Returns the account state for a particular block

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Account, required, nullable)
        + error (Error, required, nullable)

## api/v0.2/accounts/{account_id}/transactions [/accounts/{accountIdOrAddress}/transactions{?from,limit,direction}]

+ Parameters
    + accountIdOrAddress (required, string, `2319`) ... Account Id or address in the zkSync network
    + from (required, "latest" | string, `latest`) ... From which transaction to show
    + limit (required, number, `2`) ... The limit of transactions to be shown
    + direction (required, "newer" | "older", `older`) ... newer or older than the id of the `from`


### Get account transactions [GET]
Returns the transactions for a particular account according to the query params

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + pagination (object, required)
                + from: `0x2dcb7cb4288b84766a1bef4a1bd4ae9ac15ab817f06ad07efc4dac035bcfdb45` (string, required)
                + limit: 2 (number, required)
                + direction: `older` (string, required)
                + count: 268 (number, required)
            + list (array[Transaction.InBlock], required)
        + error (Error, required, nullable)

## api/v0.2/accounts/{account_id}/transactions/pending [/accounts/{accountIdOrAddress}/transactions/pending{?from,limit,direction}]

+ Parameters
    + accountIdOrAddress (required, string, `2319`) ... Account Id or address in the zkSync network
    + from (required, "latest" | number, `100`) ... From which transaction to show
    + limit (required, number, `2`) ... The limit of transactions to be shown
    + direction (required, "newer" | "older", `older`) ... newer or older than the id of the `from`

### Get pending priority operations [GET]
Get account pending priority operations.

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + pagination (object, required)
                + from: 2 (number, required)
                + limit: 2 (number, required)
                + direction: `older` (string, required)
                + count: 112 (number, required)
            + list (array[Transaction.InBlock], required)
        + error (Error, required, nullable)





# Group Batches

## api/v0.2/transactions/batches [/transactions/batches]

### Submit batch of transactions [POST]
Submit batch of transactions.

+ Request (application/json)
    + Attributes
        + txs (array[Transaction.Incoming], required)
        + signature (BatchSignature, required)

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + batchHash: 0x6d6f7e07c85a770c6cb9f667c6b7d2d6335781f956a3a66503c87a56fd392e80 (string, required)
            + transactionHashes: [0xca1d902dc4aa0d401aded0f3c4c6e73c1aa68fbb661856af1a8874472f5043bb] (array[string], required)
        + error (Error, required, nullable)


## api/v0.2/transactions/batches/:txBatchHash [/transactions/batches/{txBatchHash}]

+ Parameters
    + txBatchHash (required, string, `0x6d6f7e07c85a770c6cb9f667c6b7d2d6335781f956a3a66503c87a56fd392e80`) ... the hash of the contents of the batch queried

### Get transactions batch status [GET]
Get transactions batch status (latest receipt)

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, nullable)
            + txBatchHash: 0x6d6f7e07c85a770c6cb9f667c6b7d2d6335781f956a3a66503c87a56fd392e80 (string, required),
            + transactionHashes: [0xca1d902dc4aa0d401aded0f3c4c6e73c1aa68fbb661856af1a8874472f5043bb] (array[string], required)
            + createdAt: `2020-10-12T09:05:03.123416742` (string, required),
            + txBatchStatus (object, required)
                + updatedAt: `2020-10-12T09:05:03.123416742` (string, required)
                + lastState: committed (TxState, required)
        + error (Error, required, nullable)



# Group Blocks

## api/v0.2/blocks [/blocks{?from,limit,direction}]

+ Parameters
    + from (required, "latest" | number, `latest`) ... From which transaction to show
    + limit (required, number, `2`) ... The limit of transactions to be shown
    + direction (required, "newer" | "older", `older`) ... newer or older than the id of the `from`

### Get blocks range [GET]
Get blocks range

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + pagination (object, required)
                + from: 10781 (number, required)
                + limit: 2 (number, required)
                + count: 1120010 (number, required)
                + direction: `older` (string, required)
            + list (array[Block], required)
        + error (Error, required, nullable)

## api/v0.2/blocks/:block_number [/blocks/{blockNumber}]

+ Parameters
    + `blockNumber`: `lastCommitted` (required, BlockNumber) - a number of the block or `lastCommitted` for getting the last committed block or `lastFinalized` for getting the last finalized block

### Get block details [GET]
Get block details

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Block, required, nullable)
        + error (Error, required, nullable)

## api/v0.2/blocks/blockNumber/transactions [/blocks/{blockNumber}/transactions{?from,limit,direction}]

+ Parameters
    + `blockNumber`: `lastCommitted` (required, BlockNumber) - a number of the block or `lastCommitted` for getting the last committed block or `lastFinalized` for getting the last finalized block
    + from (required, "latest" | string, `latest`) ... From which transaction to show
    + limit (required, number, `2`) ... The limit of transactions to be shown
    + direction (required, "newer" | "older", `older`) ... newer or older than the id of the `from`

### Get block transactions [GET]
Get block transactions

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + pagination (object, required)
                + from: `0x2dcb7cb4288b84766a1bef4a1bd4ae9ac15ab817f06ad07efc4dac035bcfdb45` (string, required)
                + limit: 2 (number, required)
                + count: 23 (number, required)
                + direction: `older` (string, required)
            + list (array[Transaction.InBlock], required)
        + error (Error, required, nullable)




# Group Config

## api/v0.2/config [/config]

### Get config of network [GET]
Returns the config of network

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Config, required, nullable)
        + error (Error, required, nullable)




# Group Fees

## api/v0.2/fee [/fee]

### Get fee for a single transaction [POST]
Request fee for a single transaction.

+ Request (application/json)
    + Attributes
        + txType: Transfer (Fee.Type, required)
        + address: 0xf33A2D61DD09541A8C9897D7236aDcCCC14Cf769 (string, required)
        + tokenLike: ETH (Token.TokenLike, required)

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Fee.Single, required, nullable)
        + error (Error, required, nullable)

## api/v0.2/fee/batch [/fee/batch]

### Get fee for a transactions batch [POST]
Request fee for a transactions batch.

+ Request (application/json)
    + Attributes
        + transactions (array[Fee.Type.with.Address])
        + tokenLike: ETH (Token.TokenLike)
        + error (Error, required, nullable)

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Fee.Batch, required, nullable)
        + error (Error, required, nullable)





# Group Network status

## api/v0.2/networkStatus [/networkStatus]

### Get network status [GET]
Returns the status of the network

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (NetworkStatus, required, nullable)
        + error (Error, required, nullable)







# Group Tokens

## api/v0.2/tokens [/tokens{?from,limit,direction}]

+ Parameters
    + from (required, "latest" | number, `latest`) ... From which token id to show
    + limit (required, number, `2`) ... The limit of tokens to be returned
    + direction (required, "newer" | "older", `older`) ... newer or older than the id of the `from`

### Get list of supported tokens [GET]
Returns the tokens that are currently supported by zkSync

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (object, required, nullable)
            + pagination (object, required)
                + from: 12 (number, required)
                + limit: 2 (number, required)
                + count: 215 (number, required)
                + direction: `newer` (string, required)
            + list (array[Token.Token], required)
        + error (Error, required, nullable)

## api/v0.2/tokens/tokenIdOrAddress [/tokens/{tokenIdOrAddress}]

+ Parameters
    + tokenIdOrAddress (required, number | string, `12`) ... the id or address of the token in the zkSync network

### Get token info [GET]
Get token into

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Token.Token, required, nullable)
        + error (Error, required, nullable)

## api/v0.2/tokens/:tokenIdOrAddress/priceIn/:currency [/tokens/{tokenIdOrAddress}/priceIn/{currency}]

+ Parameters
    + tokenIdOrAddress (required, string, `12`) ... the id or address of the token in the zkSync network
    + currency (required, string, `12`) ... either usd or any of the supported tokens in the zkSync network

### Get token price [GET]
Get token price relative to another token

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Token.Price, required, nullable)
        + error (Error, required, nullable)










# Group Transactions

## api/v0.2/transactions [/transactions]

### Submit transaction [POST]
Submit single transaction

+ Request (application/json)
    + Attributes
        + tx (Transaction.Incoming, required)
        + signature (TxEthSignature, optional, nullable)

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result: 0xb092a0a2eabbf0b5b57d18e70d929899676cf3c0ad4df0f9492c3094ec4a8b19 (string, required, nullable)
        + error (Error, required, nullable)

## api/v0.2/transactions/:txHash [/transactions/{txHash}]

+ Parameters
    + txHash (required, string, `0x4727e2c87cf831bbb99f5699d8c574ecad8fcf1371875feb059440f1077fa071`) ... hash of the transaction in the zkSync network

### Get transaction receipt [GET]
Get transaction receipt

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Receipt, required, nullable)
        + error (Error, required, nullable)


## api/v0.2/transactions/:txHash/data [/transactions/{txHash}/data]

+ Parameters
    + txHash (required, string, `0x4727e2c87cf831bbb99f5699d8c574ecad8fcf1371875feb059440f1077fa071`) ... hash of the transaction in the zkSync network

### Get transaction data [GET]
Get transaction data

+ Response 200 (application/json)
    + Attributes
        + request (Request, required)
        + status: success (string, required)
        + result (Transaction.InBlock, required, nullable)
        + error (Error, required, nullable)




# Data Structures

## Account (object)
+ accountId: 12 (number, required)
+ address: `0xc0f97CC918C9d6fA4E9fc6be61a6a06589D199b3` (string, required)
+ nonce: 6412 (number, required)
+ pubKeyHash: `sync:82b9eb68c6f7f80cecf49ee1a20acb8ae9ecd602` (string, required)
+ lastUpdateInBlock: 15001 (number, required)
+ balances (object, required)


## Block
+ blockNumber: 11109 (number, required),
+ newStateRoot: `0x61684c1bd4ac3f7843b6a20d4270d58dc4139d546ea4249424bc6c2ce0a48f92` (string, required),
+ blockSize: 110 (number, required),
+ commitTxHash: `0xc2541cf68c6f41a6bc55f9d6ba24816c79431942ca3762514f448540cfa475` (string, required, nullable),
+ verifyTxHash: `0x5e188571f82171b0dc313d9ff5433f10d03153a573e6c2ae5b4fbf683dd2a3` (string, required, nullable),
+ committedAt: `2020-10-12T12:05:03.123416742` (string, required)
+ finalizedAt: `2020-10-12T12:10:03.123416742` (string, required, nullable)
+ status: `committed` (string, required)


## Config (object)
+ `network`: `mainnet` (Network, required)
+ `contract`: `0x5D8cec831732d6DA03677a33430796C4840728f7` (string, required)
+ `govContract`: `0x70e7fB5A89f9556F8fF9611bB6f42C8eAFDB6c93` (string, required)
+ `depositConfirmations`: 10 (number, required)
+ `zksyncVersion`: `contractV4` (string, required)

## Fee.Type (enum)
+ Transfer
+ ChangePubKey
+ Withdraw
+ FastWithdraw
+ Swap

## Fee.Single (object)
+ gasFee: `12000000000` (string, required),
+ zkpFee: `12000000` (string, required),
+ totalFee: `12012000000` (string, required),

## Fee.Batch
+ gasFee: `12000000000` (string, required),
+ zkpFee: `12000000` (string, required),
+ totalFee: `12012000000` (string, required),

## Fee.Type.with.Address (object)
+ txType (Fee.Type, required)
+ address: `0xF659D25A06607Da53e62DAA5842499316A4e2548` (string, required)

## Network (enum)
+ mainnet
+ rinkeby
+ ropsten
+ localhost

## NetworkStatus (object)
- `lastCommitted`: 1298 (number, required)
- `finalized`: 1296 (number, required)
- `totalTransactions`: 1200000 (number, required)
- `mempoolSize`: 123 (number, required)

## Receipt.L2
+ txHash: `0x466a9432e5337ee85deb9092526bb96377d316b9a1f0717ae4027798837fb85b` (string, required),
+ rollupBlock: 99812 (number, required, nullable),
+ status: committed (TxState, required),
+ failReason: null (string, required, nullable)

## Receipt.L1
+ status: committed (L1Status, required),
+ ethBlock: 134300 (number, required),
+ rollupBlock: 99812 (number, required, nullable),
+ id: 12001 (number, required)

## Receipt (enum)
- (Receipt.L1)
- (Receipt.L2)

## L1Status (enum)
+ committed
+ finalized
+ queued


## Token.Token (object)
- `id`: 12 (number, required)
- `address`: `0x0849D6ae02349352258Ca59c27bC6D3159A7b752` (string, required)
- `symbol`: `MLTT` (string, required)
- `decimals`: 18 (number, required)
- `enabledForFees`: true (boolean, required)

## Token.TokenLike (enum)
+ (number)
+ (string)

## Token.Price (object)
- `tokenId`: 12 (number, required)
- `tokenSymbol`: `MLTT` (string, required)
- `priceIn`: `USD` (string, required)
- `decimals`: 18 (number, required)
- `price`: `1.01` (string, required)

## Transaction.InBlock (object)
- txHash: 0x732D0a2598ba5E9db4e5cfF36F86dF8dA88A959A (string, required)
- blockNumber: 12 (number, required)
- op (Transaction, required)
- status: rejected (TxState, required)
- failReason: Nonce mismatch (string, required, nullable)
- createdAt: `2018-12-12T01:02:03.123456789` (string, required, nullable)

## Transaction.L2.Transfer (object)
- type: Transfer (string, fixed)
- to: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- fee: 1200000000 (string, required)
- from: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- nonce: 12123 (number, required)
- token: 10 (number, required)
- amount: 17500000000000000 (string, required)
- accountId: 12123 (number, required)
- validFrom: 0 (number, required, nullable)
- validUntil: 1239213821 (number, required, nullable)
- signature (L2Signature, required)

## Transaction.L2.Withdraw (object)
- type: Withdraw (string, fixed)
- to: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- fee: 1200000000 (number, required)
- from: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- nonce: 12123 (number, required)
- tokenId: 10 (number, required)
- amount: 17500000000000000 (number, required)
- accountId: 12123 (number, required)
- validFrom: 0 (number, required, nullable)
- validUntil: 1239213821 (number, required, nullable)
- fast: false (boolean, required)
- signature (L2Signature, required)

## Transaction.L2.WithdrawWithEthHash (object)
- type: Withdraw (string, fixed)
- to: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- fee: 1200000000 (number, required)
- from: 0xD3c62D2F7b6d4A63577F2415E55A6Aa6E1DbB9CA (string, required)
- nonce: 12123 (number, required)
- tokenId: 10 (number, required)
- amount: 17500000000000000 (number, required)
- accountId: 12123 (number, required)
- validFrom: 0 (number, required, nullable)
- validUntil: 1239213821 (number, required, nullable)
- fast: false (boolean, required)
- signature (L2Signature, required)
- ethTxHash: 0xdda1287002282e1804af40a7c7373bd77cc99a2a27c88bf7908be45398e93148 (string, required, nullable)

## Transaction.L2.ChangePubKey (object)
- `type`: ChangePubKey (string, fixed)
- `accountId`: 1201 (number, required)
- `account`: 0x3EEe181F789c6585B39904eBAeAb10ACf70f5F1a (string, required)
- `newPkHash`: 5fcf0bad911e8fdebd4fd79b0a832bc92a694e55 (string, required)
- `feeTokenId`: 6 (number, required)
- `fee`: 121000000000000 (number, required)
- `nonce`: 51 (number, required)
- `ethAuthData`: *ECDSAAuthType* (AuthType, optional)
- `signature` (L2Signature, required)
- `ethSignature`: 0xf0947f0a731ada6e09ca99d3aafb1469a3baaf602eab2f5661edd30d6386 (string, optional)
- `validFrom`: 0 (number, required, nullable)
- `validUntil`: 1239213821 (number, required, nullable)

## Transaction.L2.ForcedExit (object)

- `type`: `ForcedExit` (string, fixed)
- `initiatorAccountId`: 12 (number, required)
- `target`: 0x38de1b4a24548d6ff66fa8e56448d9de09955b08 (string, required)
- `nonce`: 1001 (number, required)
- `tokenId`: 5 (number, required)
- `fee`: `12000000000` (string, required)
- `validFrom`: 0 (number, required)
- `validUntil`: 1239213821 (number, required)
- `signature` (L2Signature, required)

## Transaction.L2.ForcedExitWithEthHash (object)

- `type`: `ForcedExit` (string, fixed)
- `initiatorAccountId`: 12 (number, required)
- `target`: 0x38de1b4a24548d6ff66fa8e56448d9de09955b08 (string, required)
- `nonce`: 1001 (number, required)
- `tokenId`: 5 (number, required)
- `fee`: `12000000000` (string, required)
- `validFrom`: `2018-12-12T01:02:03.123456789` (string, required)
- `validUntil`: `2018-12-12T09:02:03.123456789` (string, required)
- `signature` (L2Signature, required)
- `ethTxHash`: `0xdda1287002282e1804af40a7c7373bd77cc99a2a27c88bf7908be45398e93148` (string, required, nullable)

## Transaction.Incoming (enum)
- (Transaction.L2.Transfer)
- (Transaction.L2.Withdraw)
- (Transaction.L2.ChangePubKey)
- (Transaction.L2.ForcedExit)

## Transaction.L2 (enum)
- (Transaction.L2.Transfer)
- (Transaction.L2.WithdrawWithEthHash)
- (Transaction.L2.ChangePubKey)
- (Transaction.L2.ForcedExitWithEthHash)

## Transaction.L1.Deposit
- `type`: `Deposit` (string, fixed)
- `from`: `0x555968cfc291aece5550822feb712d1cf66c57b4` (string, required)
- `tokenId`: 12 (number, required)
- `amount`: `18000000000000000` (string, required)
- `to`: `0x3f0d95988eb8538c74e609cac0c1ce56ff3d3179` (string, required)
- `accountId`: 1413 (number, required, nullable)
- `ethHash`: `0xdda1287002282e1804af40a7c7373bd77cc99a2a27c88bf7908be45398e93148` (string, required)
- `id`: 17002 (number, required)
- `txHash`: `0x2dcb7cb4288b847d8a1bef4a1bd4ae9ac15ab817f06ad07efc4dac035bcfdb45` (string, required)

## Transaction.L1.FullExit
- `type`: `FullExit` (string, fixed)
- `accountId`: 123 (number, required)
- `tokenId`: 34 (number, required)
- `ethHash`: `0x1216aae3714e46a9efe0066ff5f3684c95ea9a680a4c39cd36e62b117cb1837c` (string, required)
- `id`: 1348 (number, required)
- `txHash`: `0xaf0612970ea1b7809886ab0cce398bb14524d700e4c7305c54c34b5f9f3e6f56` (string, required)

## Transaction.L1 (enum)
- (Transaction.L1.Deposit)
- (Transaction.L1.FullExit)

## Transaction (enum)
- (Transaction.L2.Transfer)
- (Transaction.L2.WithdrawWithEthHash)
- (Transaction.L2.ChangePubKey)
- (Transaction.L2.ForcedExitWithEthHash)
- (Transaction.L1.Deposit)
- (Transaction.L1.FullExit)

## L2Signature (object)
- pubKey: f70ec54646352161ae26f9126853419797a5adafbbc53fbb675e6ba4663d568d (string, required)
- signature: 9460c0877e523b5606674ee0bc5a77431296d070a4ebe2c6ee943cd657433e1d637066a7e6985e381740425607e97ac602f5d870717dba1d4b9ba62d3c956d03 (string, required)

## ECDSAAuthType (object)
- `type`: `ECDSA` (string, fixed)
- `batchHash`: `0xcf70011f7220e08cd58493bf04be43addb4aaf4ec6a4e05b50bbe05aa066d` (string, required)

## OnchainAuthType (object)
- `type`: `Onchain` (string, fixed)

## CREATE2AuthType (object)
- `creatorAddress`: `0xCd4eA9f4346b992e906a3672a2Ce6632760efb10` (string, required)
- `saltArg`: `0x81d79d8c78a01373a37cd2d0b5d109798f5c7a07c3bf20b4d5` (string, required)
- `codeHash`: `0x896a58a92659223a74dd447ee259607d3bac01f9b826dfce62293b8861f4e729` (string, required)

## AuthType (enum)
- (ECDSAAuthType)
- (OnchainAuthType) 
- (CREATE2AuthType)

## EthereumSignature (object)
- `type`: `EthereumSignature` (string, fixed)
- `signature`: `0xc9eb71b736ef69192d90a6516c5d66af883f6bc9a1749ed98edff106bcd49594618644860be89b08725de834d3a312d409810ecb39e9e7a5a5a9d8d870b166ab1c` (string, required)

## EIP1271Signature (object)
- `type`: `EIP1271Signature` (string, fixed)
- `signature`: `0xc9eb71b736ef69192d90a6516c5d66af883f6bc9a1749ed98edff106bcd49594618644860be89b08725de834d3a312d409810ecb39e9e7a5a5a9d8d870b166ab1c` (string, required)

## TxEthSignature (enum)
- (EthereumSignature)
- (EIP1271Signature)

## BatchSignature (enum)
- (TxEthSignature)
- (array[TxEthSignature])

## TxState (enum)
+ queued
+ committed
+ finalized
+ rejected

## BlockNumber (enum)
+ (number)
+ lastCommitted
+ lastFinalized

## Request
+ network: localhost (Network, required)
+ apiVersion: v02 (fixed, required)
+ resource: /api/v0.2/... (string, required)
+ args (object, required)
+ timestamp: `2021-05-31T14:17:24.112536900Z` (string, required)

## Error
+ errorType: errorType (string, required)
+ code: 0 (number, required)
+ message: message (string, required)
