{
  "name": "franklin-contracts",
  "version": "0.1.0",
  "license": "MIT",
  "devDependencies": {
    "@nomiclabs/hardhat-ethers": "^2.0.0",
    "@nomiclabs/hardhat-solpp": "^2.0.0",
    "@nomiclabs/hardhat-waffle": "^2.0.0",
    "@openzeppelin/contracts": "3.2.1-solc-0.7",
    "@typechain/ethers-v5": "^2.0.0",
    "@types/argparse": "^1.0.36",
    "@types/chai": "^4.2.14",
    "@types/mocha": "^8.0.3",
    "argparse": "^1.0.10",
    "axios": "^0.21.0",
    "chai": "^4.2.0",
    "chalk": "^4.1.0",
    "ethereum-waffle": "^3.0.0",
    "ethereumjs-abi": "^0.6.8",
    "ethers": "^5.0.0",
    "ethjs": "^0.4.0",
    "fs": "^0.0.1-security",
    "hardhat": "^2.0.2",
    "hardhat-contract-sizer": "^2.0.2",
    "hardhat-typechain": "^0.3.3",
    "mocha": "^6.2.0",
    "openzeppelin-solidity": "^2.3.0",
    "path": "^0.12.7",
    "prettier": "^1.18.2",
    "prettier-plugin-solidity": "^1.0.0-alpha.27",
    "querystring": "^0.2.0",
    "solhint": "^2.1.2",
    "solhint-plugin-prettier": "^0.0.3",
    "ts-node": "^8.3.0",
    "tslint": "^5.18.0",
    "typechain": "^4.0.0",
    "typescript": "^3.5.3",
    "zksync": "link:../sdk/zksync.js"
  },
  "scripts": {
    "build": "hardhat compile",
    "build-dev": "hardhat compile",
    "test": "yarn build && zk f mocha -r ts-node/register test/**/*.ts",
    "itest": "yarn build && mocha -r ts-node/register test/unit_tests/**/*.js test/fails_tests.ts",
    "unit-test": "yarn build && mocha -r ts-node/register test/unit_tests/**/*",
    "unit-test-watch": "yarn build && mocha -r ts-node/register test/unit_tests/**/* --watch --watch-extensions ts --watch-extensions 'js'",
    "deploy-no-build": "ts-node scripts/deploy.ts",
    "upgrade-testnet-no-build": "ts-node scripts/upgrade-testnet.ts",
    "deploy-erc20": "ts-node scripts/deploy-erc20.ts",
    "deploy-testkit": "ts-node scripts/deploy-testkit.ts",
    "publish-sources": "ts-node scripts/publish.ts",
    "deploy-testnet-erc20": "ts-node scripts/deploy-testnet-token.ts",
    "lint:solidity": "solhint contracts/**/*.sol",
    "lint:ts": "tslint -c tslint.json {scripts,test}/**/*.ts",
    "lint:ts-fix": "tslint -c tslint.json --fix {scripts,test}/**/*.ts"
  }
}
