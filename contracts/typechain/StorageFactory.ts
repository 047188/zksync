/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Storage } from "./Storage";

export class StorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  connect(signer: Signer): StorageFactory {
    return super.connect(signer) as StorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "authFacts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes22",
        name: "",
        type: "bytes22",
      },
    ],
    name: "balancesToWithdraw",
    outputs: [
      {
        internalType: "uint128",
        name: "balanceToWithdraw",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "gasReserveValue",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "blocks",
    outputs: [
      {
        internalType: "uint32",
        name: "committedAtBlock",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "priorityOperations",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "chunks",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "withdrawalsDataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "exited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exodusMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstPendingWithdrawalIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstPriorityRequestId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
    ],
    name: "getBalanceToWithdraw",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "hashedBlocks",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hashedVerifiedCommitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPendingWithdrawals",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "pendingWithdrawals",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "priorityRequests",
    outputs: [
      {
        internalType: "enum Operations.OpType",
        name: "opType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "pubData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "expirationBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBlocksCommitted",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBlocksVerified",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCommittedPriorityRequests",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOpenPriorityRequests",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradePreparationActivationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradePreparationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610757806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637d490798116100ad578063c57b22be11610071578063c57b22be1461040c578063cd24ee0814610414578063fa6b53c31461041c578063faf4d8cb14610468578063ffeec2371461047057610121565b80637d490798146102b45780638ae20dc91461036c578063922e14921461039e578063a2f9f1ce146103a6578063a69a6fc7146103ef57610121565b806334f6bb1c116100f457806334f6bb1c146101c55780633c06e514146101ea5780633c6461a9146101f25780635cd0783e1461024157806367708dae146102ac57610121565b80630456f64014610126578063264c09121461015b5780632b8c062a146101775780632d24006c146101a4575b600080fd5b6101496004803603602081101561013c57600080fd5b503563ffffffff16610478565b60408051918252519081900360200190f35b61016361048a565b604080519115158252519081900360200190f35b6101636004803603604081101561018d57600080fd5b50803563ffffffff16906020013561ffff16610493565b6101ac6104b3565b6040805163ffffffff9092168252519081900360200190f35b6101cd6104c6565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101ac6104dd565b61021c6004803603602081101561020857600080fd5b503569ffffffffffffffffffff19166104f1565b604080516001600160801b03909316835260ff90911660208301528051918290030190f35b6102646004803603602081101561025757600080fd5b503563ffffffff16610518565b6040805163ffffffff978816815267ffffffffffffffff909616602087015293909516848401526060840191909152608083015260a082019290925290519081900360c00190f35b6101cd610563565b6102db600480360360208110156102ca57600080fd5b503567ffffffffffffffff16610573565b604051808460088111156102eb57fe5b815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561032f578181015183820152602001610317565b50505050905090810190601f16801561035c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101496004803603604081101561038257600080fd5b5080356001600160a01b0316906020013563ffffffff16610627565b610163610644565b6103c9600480360360208110156103bc57600080fd5b503563ffffffff1661064d565b604080516001600160a01b03909316835261ffff90911660208301528051918290030190f35b6101636004803603602081101561040557600080fd5b5035610675565b6101cd61068a565b6101ac6106a1565b61044c6004803603604081101561043257600080fd5b5080356001600160a01b0316906020013561ffff166106ad565b604080516001600160801b039092168252519081900360200190f35b6101ac6106eb565b6101496106fe565b600d6020526000908152604090205481565b60095460ff1681565b600860209081526000928352604080842090915290825290205460ff1681565b600654600160401b900463ffffffff1681565b600c54600160801b900467ffffffffffffffff1681565b600654640100000000900463ffffffff1681565b6004602052600090815260409020546001600160801b03811690600160801b900460ff1682565b600760205260009081526040902080546001820154600283015460039093015463ffffffff8084169467ffffffffffffffff64010000000086041694600160601b9004909116929186565b600c5467ffffffffffffffff1681565b600b602090815260009182526040918290208054600180830180548651600261010094831615949094026000190190911692909204601f810186900486028301860190965285825260ff9092169492939092908301828280156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b5050505050908060020154905083565b600a60209081526000928352604080842090915290825290205481565b60005460ff1681565b6005602052600090815260409020546001600160a01b03811690600160a01b900461ffff1682565b600e6020526000908152604090205460ff1681565b600c54600160401b900467ffffffffffffffff1681565b60065463ffffffff1681565b6000600460006106bd8585610704565b69ffffffffffffffffffff191681526020810191909152604001600020546001600160801b03169392505050565b600654600160601b900463ffffffff1681565b60015481565b60a01b61ffff60a01b166001600160a01b03919091161760501b9056fea26469706673582212207c60c4032baad35d28db3360c2511ebdc964636ed2d06b8d20b8f36d39b8c3bc64736f6c63430007030033";
