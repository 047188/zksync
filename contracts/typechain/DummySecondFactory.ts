/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DummySecond } from "./DummySecond";

export class DummySecondFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DummySecond> {
    return super.deploy(overrides || {}) as Promise<DummySecond>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummySecond {
    return super.attach(address) as DummySecond;
  }
  connect(signer: Signer): DummySecondFactory {
    return super.connect(signer) as DummySecondFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummySecond {
    return new Contract(address, _abi, signerOrProvider) as DummySecond;
  }
}

const _abi = [
  {
    inputs: [],
    name: "getNoticePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "get_DUMMY_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "get_UPGRADE_NOTICE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isReadyForUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "upgradeParameters",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeCanceled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeFinishes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeNoticePeriodStarted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradePreparationStarted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyPriorityOperation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636255c9b6116100715780636255c9b61461012857806378b91e7014610142578063871b8ff1146101425780638773334c146101ba578063b269b9ae14610142578063f0898ed0146101d6576100a9565b80630f8d1dbe146100ae57806325394645146100b85780632a3174f4146101285780633b154b7314610142578063439fab911461014a575b600080fd5b6100b66101de565b005b6100b6600480360360208110156100ce57600080fd5b8101906020810181356401000000008111156100e957600080fd5b8201836020820111156100fb57600080fd5b8035906020019184600183028401116401000000008311171561011d57600080fd5b509092509050610204565b610130610244565b60408051918252519081900360200190f35b6100b6610249565b6100b66004803603602081101561016057600080fd5b81019060208101813564010000000081111561017b57600080fd5b82018360208201111561018d57600080fd5b803590602001918460018302840111640100000000831117156101af57600080fd5b50909250905061024b565b6101c2610280565b604080519115158252519081900360200190f35b6101306102ad565b6000805467ffffffffffffffff8082166001011667ffffffffffffffff19909116179055565b60008282600081811061021357fe5b919091013560f81c9150600090508383600181811061022e57fe5b600294909455509091013560f81c600355505050565b600490565b565b6040805162461bcd60e51b81526020600482015260056024820152646473696e6960d81b604482015290519081900360640190fd5b600061028a6102b2565b67ffffffffffffffff1661029c6102b7565b67ffffffffffffffff161015905090565b600290565b600090565b60005467ffffffffffffffff169056fea264697066735822122076a9320a8b155563e9b6450b53a27b2757157190975284070c6be167eab03f5864736f6c63430007030033";
