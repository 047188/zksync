/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface OperationsTestInterface extends ethers.utils.Interface {
  functions: {
    "parseDepositFromPubdata(bytes)": FunctionFragment;
    "parseFullExitFromPubdata(bytes)": FunctionFragment;
    "testDeposit()": FunctionFragment;
    "testDepositMatch(bytes)": FunctionFragment;
    "testForcedExit()": FunctionFragment;
    "testFullExit()": FunctionFragment;
    "testFullExitMatch(bytes)": FunctionFragment;
    "testPartialExit()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "parseDepositFromPubdata",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "parseFullExitFromPubdata",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "testDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "testDepositMatch",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "testForcedExit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "testFullExit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "testFullExitMatch",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "testPartialExit",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "parseDepositFromPubdata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseFullExitFromPubdata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testDepositMatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testForcedExit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testFullExit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testFullExitMatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testPartialExit",
    data: BytesLike
  ): Result;

  events: {};
}

export class OperationsTest extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: OperationsTestInterface;

  functions: {
    parseDepositFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      tokenId: number;
      amount: BigNumber;
      owner: string;
      0: number;
      1: BigNumber;
      2: string;
    }>;

    "parseDepositFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      tokenId: number;
      amount: BigNumber;
      owner: string;
      0: number;
      1: BigNumber;
      2: string;
    }>;

    parseFullExitFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      accountId: number;
      owner: string;
      tokenId: number;
      amount: BigNumber;
      0: number;
      1: string;
      2: number;
      3: BigNumber;
    }>;

    "parseFullExitFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      accountId: number;
      owner: string;
      tokenId: number;
      amount: BigNumber;
      0: number;
      1: string;
      2: number;
      3: BigNumber;
    }>;

    testDeposit(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "testDeposit()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    testDepositMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "testDepositMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    testForcedExit(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    "testForcedExit()"(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    testFullExit(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    "testFullExit()"(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    testFullExitMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "testFullExitMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    testPartialExit(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    "testPartialExit()"(
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;
  };

  parseDepositFromPubdata(
    _pubdata: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    tokenId: number;
    amount: BigNumber;
    owner: string;
    0: number;
    1: BigNumber;
    2: string;
  }>;

  "parseDepositFromPubdata(bytes)"(
    _pubdata: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    tokenId: number;
    amount: BigNumber;
    owner: string;
    0: number;
    1: BigNumber;
    2: string;
  }>;

  parseFullExitFromPubdata(
    _pubdata: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    accountId: number;
    owner: string;
    tokenId: number;
    amount: BigNumber;
    0: number;
    1: string;
    2: number;
    3: BigNumber;
  }>;

  "parseFullExitFromPubdata(bytes)"(
    _pubdata: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    accountId: number;
    owner: string;
    tokenId: number;
    amount: BigNumber;
    0: number;
    1: string;
    2: number;
    3: BigNumber;
  }>;

  testDeposit(
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  "testDeposit()"(
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  testDepositMatch(
    offchain: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "testDepositMatch(bytes)"(
    offchain: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  testForcedExit(overrides?: CallOverrides): Promise<void>;

  "testForcedExit()"(overrides?: CallOverrides): Promise<void>;

  testFullExit(overrides?: CallOverrides): Promise<void>;

  "testFullExit()"(overrides?: CallOverrides): Promise<void>;

  testFullExitMatch(
    offchain: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "testFullExitMatch(bytes)"(
    offchain: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  testPartialExit(overrides?: CallOverrides): Promise<void>;

  "testPartialExit()"(overrides?: CallOverrides): Promise<void>;

  callStatic: {
    parseDepositFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      tokenId: number;
      amount: BigNumber;
      owner: string;
      0: number;
      1: BigNumber;
      2: string;
    }>;

    "parseDepositFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      tokenId: number;
      amount: BigNumber;
      owner: string;
      0: number;
      1: BigNumber;
      2: string;
    }>;

    parseFullExitFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      accountId: number;
      owner: string;
      tokenId: number;
      amount: BigNumber;
      0: number;
      1: string;
      2: number;
      3: BigNumber;
    }>;

    "parseFullExitFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      accountId: number;
      owner: string;
      tokenId: number;
      amount: BigNumber;
      0: number;
      1: string;
      2: number;
      3: BigNumber;
    }>;

    testDeposit(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "testDeposit()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    testDepositMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "testDepositMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    testForcedExit(overrides?: CallOverrides): Promise<void>;

    "testForcedExit()"(overrides?: CallOverrides): Promise<void>;

    testFullExit(overrides?: CallOverrides): Promise<void>;

    "testFullExit()"(overrides?: CallOverrides): Promise<void>;

    testFullExitMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "testFullExitMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    testPartialExit(overrides?: CallOverrides): Promise<void>;

    "testPartialExit()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    parseDepositFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "parseDepositFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseFullExitFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "parseFullExitFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testDeposit(overrides?: CallOverrides): Promise<BigNumber>;

    "testDeposit()"(overrides?: CallOverrides): Promise<BigNumber>;

    testDepositMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "testDepositMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testForcedExit(overrides?: CallOverrides): Promise<BigNumber>;

    "testForcedExit()"(overrides?: CallOverrides): Promise<BigNumber>;

    testFullExit(overrides?: CallOverrides): Promise<BigNumber>;

    "testFullExit()"(overrides?: CallOverrides): Promise<BigNumber>;

    testFullExitMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "testFullExitMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testPartialExit(overrides?: CallOverrides): Promise<BigNumber>;

    "testPartialExit()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    parseDepositFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "parseDepositFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseFullExitFromPubdata(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "parseFullExitFromPubdata(bytes)"(
      _pubdata: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testDeposit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "testDeposit()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    testDepositMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "testDepositMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testForcedExit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "testForcedExit()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testFullExit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "testFullExit()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    testFullExitMatch(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "testFullExitMatch(bytes)"(
      offchain: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testPartialExit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "testPartialExit()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
